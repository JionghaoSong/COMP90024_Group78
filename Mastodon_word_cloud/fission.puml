@startuml
start

:Initialize Elasticsearch Connection;
note right
  Connect using the Elasticsearch class;
  URL: https://elasticsearch-master.elastic.svc.cluster.local:9200;
  Auth: Basic authentication with username and password;
end note

:Check if scroll_id exists;
if (scroll_id exists?) then (yes)
  :Use existing scroll_id to continue query;
else (no)
  :Send new search query with scroll '1m';
endif

partition "Data Fetching and Processing" {
  :Receive data from Elasticsearch;
  :Process data according to index;
  fork
    :Weather Data Handling;
    if (More data in "weather_station"?) then (yes)
      ->[More] Use scroll_id to fetch more;
    else (no)
      stop
    endif
  fork again
    :Accident Reports Handling;
    if (More data in "accidents"?) then (yes)
      ->[More] Use scroll_id to fetch more;
    else (no)
      stop
    endif
  fork again
    :Liquor Store Data Handling;
    if (More data in "liquor"?) then (yes)
      ->[More] Use scroll_id to fetch more;
    else (no)
      stop
    endif
  fork again
    :Mastodon Data Handling;
    if (More data in "mastodon"?) then (yes)
      ->[More] Use scroll_id to fetch more;
    else (no)
      stop
    endif
  fork again
    :Sensor Data Handling;
    if (More data in "sensor_data"?) then (yes)
      ->[More] Use scroll_id to fetch more;
    else (no)
      stop
    endif
  end fork
}

:Handle errors;
note left
  Include timeout and HTTP errors handling;
end note

:Scripting for Deployment;
note right
  Use build.sh for installing and packaging;
  Integrate with Fission for route management;
end note

stop
@enduml
